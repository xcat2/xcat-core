#!/bin/bash

#
# warn_if_bad		Put out warning message(s) if $1 has bad RC.
#
#	$1	0 (pass) or non-zero (fail).
#	$2+	Remaining arguments printed only if the $1 is non-zero.
#
#	Incoming $1 is returned unless it is 0
#
function warn_if_bad()
{
	local -i rc="$1"
	local script="${0##*/}"

	# Ignore if no problems
	[ "${rc}" -eq "0" ] && return 0

	# Broken
	shift
	echo "${script}: $@" >&2
	return "${rc}"
}

#
# exit_if_bad		Put out error message(s) if $1 has bad RC.
#
#	$1	0 (pass) or non-zero (fail).
#	$2+	Remaining arguments printed only if the $1 is non-zero.
#
#               Exits with 1 unless $1 is 0
#
function exit_if_bad()
{
	warn_if_bad "$@" || exit 1
	return 0
}

TMP_DIR=""

function internal_cleanup()
{
	[ -d "${TMP_DIR}" ] && rm -rf "${TMP_DIR}"
}

#trap internal_cleanup EXIT

TMP_DIR="$(mktemp -d "/tmp/${0##*/}.XXXXXXXX" 2>/dev/null)"
exit_if_bad "$?" "Above listed required command(s) not found."

# Main
if [ -z "$1" ]
then
	echo "Usage: ${0##*/} <goconserver binary tarball>"
	echo
	echo "Examples:"
	echo "  ${0##*/} goconserver_linux_ppc64le.tar.gz"
	echo "  ${0##*/} https://github.com/chenglch/goconserver/files/1505167/goconserver_linux_ppc64le.tar.gz"
	exit 0
fi

BASE_DIR="${0%/*}"

GOCONSERVER_BINARY_TARBALL="$1"
"${BASE_DIR}/prep-tarball" "${GOCONSERVER_BINARY_TARBALL}"
exit_if_bad "$?" "prep-tarball failed."

tmp_b="${GOCONSERVER_BINARY_TARBALL##*/}"
tmp_b="${tmp_b%%.*}"
ARCH="${tmp_b##*_}"
GOCONSERVER_REPACK_TARBALL="goconserver-repack-${ARCH}.tar.gz"

case "${ARCH}" in
"ppc64le")
	ARCH="ppc64el"
	;;
esac

cat <<-EOF >description-pak
Independent tool to provide terminal session service.
goconserver is written in golang and is a part of microservice of xcat3. It
can work as a independent tool to provide the terminal session service.
Terminal session could run in the background and help logging the terminal
content.
EOF

# Make sure goconserver is not installed
dpkg -P goconserver

type checkinstall >/dev/null 2>&1
exit_if_bad "$?" "Command not found - checkinstall"

checkinstall --arch "${ARCH}" -D -y \
	--pkgname goconserver \
	--pkglicense EPL \
	--pkgversion 0.1.0 \
	--pkgrelease "snap$(date '+%Y%m%d%H%M')" \
	--maintainer "gongjie@linux.vnet.ibm.com" \
	--requires libc6 \
	tar -x -C / -f "${GOCONSERVER_REPACK_TARBALL}"
exit_if_bad "$?" "build package failed."

rm -f description-pak
dpkg -P goconserver
