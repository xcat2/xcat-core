echo ARP=no >> /etc/sysconfig/network-scripts/ifcfg-eth0

# Get hostname
export HOSTNAME=$(host $IP 2>/dev/null | awk '{print $5}' | awk -F. '{print $1}')
hostname $HOSTNAME

# Run xcat postscripts
# Master/service node set by nodeset
export MASTER_IPS=( replace_master )
export MASTER=replace_master
export INSTALLDIR=replace_install_dir
if [ -z "$INSTALLDIR" ]; then
    INSTALLDIR="/install"
fi

cd /tmp
RAND=$(perl -e 'print int(rand(50)). "\n"')
sleep $RAND

# Loop through the master/service nodes
for t in $(seq 1 20)
do
    GOTIT=0
    for i in $MASTER_IPS
    do
        # Download postscripts from server
        wget -l inf -N -r --waitretry=10 --random-wait --retry-connrefused  -e robots=off -nH --cut-dirs=2 --reject "index.html*" --no-parent -t 0 -T 60 http://$i$INSTALLDIR/postscripts/ -P /xcatpost
        if [ "$?" = "0" ]; then
            # Exit if openssl is not executable
            if [ ! -x /usr/bin/openssl ]; then
                exit 1
            fi
            
            USEOPENSSLFORXCAT=1
            export USEOPENSSLFORXCAT
            
            # Get xcat server
            XCATSERVER=$i:3001
            export XCATSERVER
         
            # Move postscripts into /xcatpost
            mv $i/postscripts /xcatpost
            # Remove postscritps
            rm -rf $i
            
            # Make postscripts executable
            chmod +x /xcatpost/*

            # Get postscript to run on this node from xcat server
            /xcatpost/getpostscript.awk |sed -e 's/<[^>]*>//g'|egrep -v '^ *$'|sed -e 's/^ *//' > /xcatpost/mypostscript
            MYCONT=`grep MASTER /xcatpost/mypostscript`
            MAX_RETRIES=10
            RETRY=0
            while [ -z "$MYCONT" ]; do
                RETRY=$(($RETRY+1))
                if [ $RETRY -eq $MAX_RETRIES ]
                then
                    break
                fi

                # Sleep a couple of seconds before trying again
                let SLI=$RANDOM%10+10
                sleep $SLI
            
                # Get postscript to run on this node from xcat server
                /xcatpost/getpostscript.awk |sed -e 's/<[^>]*>//g'|egrep -v '^ *$'|sed -e 's/^ *//' > /xcatpost/mypostscript
                MYCONT=`grep MASTER /xcatpost/mypostscript`
            done

            # Make executable
            chmod +x /xcatpost/mypostscript
            GOTIT=1
            break
        fi
    done
    
    # If postscripts for this node are found
    if [ "$GOTIT" = "1" ]; then
        # Save the master/service node to /opt/xcat/xcatinfo file
        if [ ! -f /opt/xcat/xcatinfo ]; then
            mkdir -p /opt/xcat
            touch /opt/xcat/xcatinfo
        fi
        echo "XCATSERVER=$i" > /opt/xcat/xcatinfo
        echo "REBOOT=TRUE" >> /opt/xcat/xcatinfo   
        break
    fi
    RAND=$(perl -e 'print int(rand(5)). "\n"')
    sleep $RAND
done

cd /xcatpost
export PATH=$PATH:/xcatpost

# Use the run_ps subroutine to run the postscripts
TMP=`sed "/postscripts-start-here/,/postscripts-end-here/ s/\(.*\)/run_ps postscript \1/;s/run_ps postscript\s*#/#/;s/run_ps postscript\s*$//" /xcatpost/mypostscript`
echo "
# Subroutine used to run postscripts
# \$1 argument is the script type
# rest argument is the script name and arguments
run_ps () {
    logdir=\"/var/log/xcat\"
    mkdir -p \$logdir
    logfile=\"/var/log/xcat/xcat.log\"
    scriptype=\$1
    shift;

    if [ -z \"\$scriptype\" ]; then
        scriptype=\"postscript\"
    fi
 
    if [ -f \$1 ]; then 
        echo \"Running \$scriptype: \$1\" | tee -a \$logfile
        ./\$@ 2>&1 | tee -a \$logfile
    else
        echo \"\$scriptype \$1 does NOT exist.\" | tee -a \$logfile
    fi
}
# Subroutine end

" > /xcatpost/mypostscript
echo "$TMP" >> /xcatpost/mypostscript
TMP=`sed "/postbootscripts-start-here/,/postbootscripts-end-here/ s/\(.*\)/run_ps postbootscript \1/;s/run_ps postbootscript\s*#/#/;s/run_ps postbootscript\s*$//" /xcatpost/mypostscript`
echo "$TMP" > /xcatpost/mypostscript 


# Save post boot scripts to /xcatpost/mypostscript.post
TMP=`sed "/postscripts-start-here/,/postscripts-end-here/ d" /xcatpost/mypostscript`
echo "$TMP" > /xcatpost/mypostscript.post
chmod 755 /xcatpost/mypostscript.post

# Create post init
cat >/etc/init.d/xcatpostinit1 << 'EOF'
# Copy the contents of /install/postscripts/xcatpostinit1 here
replace_xcatpostinit1
EOF
# Change permissions
chmod 755 /etc/init.d/xcatpostinit1

# Create post install
mkdir -p /opt/xcat
cat >/opt/xcat/xcatinstallpost << 'EOF'
# Copy the contents of /install/postscripts/xcatinstallpost here
replace_xcatinstallpost

if [ -f /xcatpost/mypostscript.post ]; then
    RUNBOOTSCRIPTS=`grep 'RUNBOOTSCRIPTS=' /xcatpost/mypostscript.post |cut -d= -f2`
fi
if [ "$RUNBOOTSCRIPTS" != "'yes'" ]; then
    chkconfig xcatpostinit1 off
fi
echo "REBOOT=TRUE" >> /opt/xcat/xcatinf
EOF
chmod 755 /opt/xcat/xcatinstallpost

chkconfig --add xcatpostinit1

# Only run preboot scripts here
TMP=`sed "/postbootscripts-start-here/,/postbootscripts-end-here/ d" /xcatpost/mypostscript`
echo "$TMP" > /xcatpost/mypostscript
/xcatpost/mypostscript

# Master/service node variable set by nodeset
updateflag.awk $MASTER 3002
